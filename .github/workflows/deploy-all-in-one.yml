name: Build, Test, Deploy
on:
  push:
    branches: [EGRC-492]
  workflow_dispatch:

env:
  IMAGE_NAME: easygrc-all-in-one
  CONTAINER_NAME: test_container

jobs:
  build_test_deploy:
    name: Build, Test, and Deploy All-in-One Docker Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Install the oscal-viewer from GitHub packages
      # Get the latest version from the GitHub API and download the tarball
      # and copy the production build into a "build" folder
      - name: Pull OSCAL Viewer
        run: |
          wget --header "Authorization: token ${NPM_TOKEN}" \
            $(curl \
            -H "Authorization: token ${NPM_TOKEN}" \
            https://npm.pkg.github.com/EasyDynamics/@easydynamics/oscal-viewer/ | \
            jq --raw-output '."dist-tags".latest as $latest |
            .versions[] | select(.version == $latest) | .dist.tarball' \
          ) -O oscal-viewer.tgz
          tar -xf ./oscal-viewer.tgz
          cp -r package/build ./build
          ls build
        env:
          NPM_TOKEN: ${{ secrets.PACKAGE_READ_TOKEN }}


      # Pull the REST service .jar file from the Maven repository
      # and rename it to the filename that the Dockerfile expects
      # TODO: make this filename configurable
      - name: Pull OSCAL REST Service
        run: |
          export REST_VERSION=$(curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${MAVEN_TOKEN}" \
          https://api.github.com/orgs/EasyDynamics/packages/maven/com.easydynamics.oscal-rest-service/versions | \
          jq --raw-output '.[0].name')
          mvn -X --settings ./settings.xml \
          org.apache.maven.plugins:maven-dependency-plugin:3.2.0:get \
          -Dartifact=com.easydynamics:oscal-rest-service:${REST_VERSION}
          mvn org.apache.maven.plugins:maven-dependency-plugin:3.2.0:copy \
          -Dartifact=com.easydynamics:oscal-rest-service:${REST_VERSION}:jar \
          -DoutputDirectory=./
          ls
        env:
          MAVEN_TOKEN: ${{ secrets.PACKAGE_READ_TOKEN }}

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ${IMAGE_NAME}

      - name: Run Docker Container for Tests
        run: |
          docker run --rm -p 8080:8080 \
          -v $(pwd)/all-in-one/oscal-content:/app/oscal-content \
          --name ${CONTAINER_NAME} ${IMAGE_NAME} &

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          spec: cypress/integration/OSCAL/OSCAL_URL_Test.spec.js

      - name: Stop Running Container
        run:
          docker stop ${CONTAINER_NAME}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to Container Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags:
            ghcr.io/EasyDynamics/${IMAGE_NAME}:latest
