name: Build, Test, Deploy
on:
  push:
    branches: [EGRC-492]
  workflow_dispatch:

env:
  IMAGE_NAME: easygrc-all-in-one
  CONTAINER_NAME: test_container

jobs:
  build_test_deploy:
    name: Build, Test, and Deploy All-in-One Docker Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Tools
        run: |
          sudo apt-get update
          sudo apt-get install jq xmlstarlet curl wget

      # Install the latest versions of the OSCAL Viewer and
      # OSCAL REST Service from GitHub packages
      - name: Pull OSCAL Viewer and OSCAL REST Service
        run: bash ./all-in-one/packages_pull.sh ${{ secrets.PACKAGE_READ_TOKEN }}

      # Get Default OSCAL Content for testing
      - name: Pull OSCAL Content
        working-directory: all-in-one
        run: bash ./get-oscal-content.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Build the Docker image, and load it locally so it can be run for testing
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./all-in-one/Dockerfile
          load: true
          tags: ${{ env.IMAGE_NAME }}

      # Run container in the background, exposing the port that
      # Cypress uses to run the tests.
      - name: Run Docker Container for Tests
        run: |
          docker run --rm -p 8080:8080 \
          -v $(pwd)/all-in-one/oscal-content:/app/oscal-content \
          --name ${CONTAINER_NAME} ${IMAGE_NAME} &

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          spec: cypress/integration/OSCAL/OSCAL_URL_Test.spec.js
          working-directory: end-to-end-tests

      - name: Stop Running Container
        run:
          docker stop ${CONTAINER_NAME}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./all-in-one/Dockerfile
          push: true
          tags:
            ghcr.io/EasyDynamics/${{ env.IMAGE_NAME }}:latest
